name: docker images d

on:
  workflow_dispatch:
    inputs:
      release:
        description: 'Publish release (untick for test only)'
        default: 'true'
        required: true
        type: boolean
      debian_version:
        description: 'Debian version (buster vs buster-testing)'
        default: 'bookworm'
        required: true
        type: string

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl gunzip pip3
          pip3 install htmlq
        shell: bash

      - name: Get package version
        run: |
          changelog=$(curl "https://www.3cx.com/blog/change-log/phone-system-change-log/" --silent | htmlq "h2 + ul" -1)
          url=http://repo.3cx.com/3cx/dists/${{ github.event.inputs.debian_version }}/main/binary-amd64/Packages.gz
          package=3cxpbx
          package_version=$(curl -s $url | gunzip | grep -A 10 "^Package: $package$" | awk '/Version: / { print $2 }' | sort -r | head -1)
          if [[ ! $(curl "https://www.3cx.com/blog/change-log/phone-system-change-log/" --silent | htmlq "h2" -1) == *"${package_version}"* ]]; then changelog=""; fi
          echo package_version=$package_version >> $GITHUB_ENV
          echo changelog=$changelog >> $GITHUB_ENV
        shell: bash

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0
        with:
          config: buildkitd.toml

      - name: Login to DockerHub
        uses: docker/login-action@v3.1.0
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push (release)
        if: github.event.inputs.release == 'true'
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            PACKAGE_VERSION=${{ env.package_version }}
            DEBIAN_VERSION=${{ github.event.inputs.debian_version }}
          tags: |
            ghcr.io/levinetit/3cx:${{ env.package_version }}-${{ github.run_number }}
            ghcr.io/levinetit/3cx:${{ env.package_version }}
            ghcr.io/levinetit/3cx:latest
            ${{ secrets.DOCKER_USER }}/3cx:latest
            ${{ secrets.DOCKER_USER }}/3cx:${{ env.package_version }}
            ${{ secrets.DOCKER_USER }}/3cx:${{ env.package_version }}-${{ github.run_number }}

      - name: Create Release
        if: github.event.inputs.release == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.package_version }}-${{ github.run_number }}
          release_name: Release v${{ env.package_version }}-${{ github.run_number }}
          body: |
            3CX v${{ env.package_version }} docker image:
            > docker run levinetit/3cx:${{ env.package_version }}
            
            Changelog:
              ${{ env.changelog }}
              
            https://www.3cx.com/blog/change-log/phone-system-change-log/
